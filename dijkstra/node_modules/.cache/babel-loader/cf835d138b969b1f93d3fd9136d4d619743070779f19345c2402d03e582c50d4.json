{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dani1\\\\Projeto Algoritmo\\\\Grafos1_FluxoDeSoftware\\\\buscaEmProfundidade\\\\src\\\\BodyComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport grafo from './dfs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BodyComponent = () => {\n  _s();\n  const [vertices, setVertices] = useState([]); // Estado para armazenar os vértices do grafo\n  const [opcaoSelecionada, setOpcaoSelecionada] = useState('');\n  const [dfsOutput, setDfsOutput] = useState('');\n  useEffect(() => {\n    const grafoVertices = grafo.getVertices();\n    setVertices(grafoVertices);\n  }, []);\n  const handleSelectChange = e => {\n    setOpcaoSelecionada(e.target.value);\n  };\n  const handleSearchClick = () => {\n    // ...\n\n    if (opcaoSelecionada) {\n      // Se uma opção estiver selecionada, chama a função grafo.dfs() com a opção selecionada\n      const output = grafo.dfs(opcaoSelecionada);\n\n      // Atualiza o estado com a estrutura de dados do grafo\n      setDfsOutput(output);\n    } else {\n      // Se nenhuma opção estiver selecionada, exibe o grafo completo\n      const grafoCompleto = grafo.dfs(); // Chama grafo.dfs() sem argumentos para exibir o grafo completo\n\n      // Atualiza o estado com a estrutura de dados do grafo completo\n      setDfsOutput(grafoCompleto);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered-text1\",\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Selecione a mat\\xE9ria de Software\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered-text2\",\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"que voc\\xEA deseja analisar a continua\\xE7\\xE3o do fluxo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 38\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"custom-select\",\n      value: opcaoSelecionada,\n      onChange: handleSelectChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Fluxo Completo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), \" \", vertices.map((vertice, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: vertice,\n        children: vertice\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"custom-button\",\n      onClick: handleSearchClick,\n      children: \"Buscar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rounded-box\",\n      children: dfsOutput && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph\",\n        children: dfsOutput.split('\\n').map((line, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: line\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(BodyComponent, \"K70fE5RFCRG/5lQujZx4jCuK/Oo=\");\n_c = BodyComponent;\nexport default BodyComponent;\nvar _c;\n$RefreshReg$(_c, \"BodyComponent\");","map":{"version":3,"names":["React","useEffect","useState","grafo","jsxDEV","_jsxDEV","BodyComponent","_s","vertices","setVertices","opcaoSelecionada","setOpcaoSelecionada","dfsOutput","setDfsOutput","grafoVertices","getVertices","handleSelectChange","e","target","value","handleSearchClick","output","dfs","grafoCompleto","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","vertice","index","onClick","split","line","_c","$RefreshReg$"],"sources":["C:/Users/dani1/Projeto Algoritmo/Grafos1_FluxoDeSoftware/buscaEmProfundidade/src/BodyComponent.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport grafo from './dfs';\r\n\r\nconst BodyComponent = () => {\r\n  const [vertices, setVertices] = useState([]); // Estado para armazenar os vértices do grafo\r\n  const [opcaoSelecionada, setOpcaoSelecionada] = useState('');\r\n  const [dfsOutput, setDfsOutput] = useState('');\r\n\r\n\r\n  useEffect(() => {\r\n    const grafoVertices = grafo.getVertices();\r\n    setVertices(grafoVertices);\r\n  }, []); \r\n  \r\n\r\n\r\n  const handleSelectChange = (e) => {\r\n    setOpcaoSelecionada(e.target.value);\r\n  };\r\n\r\n  const handleSearchClick = () => {\r\n    // ...\r\n  \r\n    if (opcaoSelecionada) {\r\n      // Se uma opção estiver selecionada, chama a função grafo.dfs() com a opção selecionada\r\n      const output = grafo.dfs(opcaoSelecionada);\r\n  \r\n      // Atualiza o estado com a estrutura de dados do grafo\r\n      setDfsOutput(output);\r\n    } else {\r\n      // Se nenhuma opção estiver selecionada, exibe o grafo completo\r\n      const grafoCompleto = grafo.dfs(); // Chama grafo.dfs() sem argumentos para exibir o grafo completo\r\n  \r\n      // Atualiza o estado com a estrutura de dados do grafo completo\r\n      setDfsOutput(grafoCompleto);\r\n    }\r\n  };\r\n  \r\n  \r\n\r\n  return (\r\n    <div className=\"body\">\r\n      <p className=\"centered-text1\"><strong>Selecione a matéria de Software</strong></p>\r\n      <p  className=\"centered-text2\"><strong>que você deseja analisar a continuação do fluxo</strong></p>\r\n\r\n      <select className=\"custom-select\" value={opcaoSelecionada} onChange={handleSelectChange}>\r\n      <option value=\"\">Fluxo Completo</option> {/* Opção padrão */}\r\n        {vertices.map((vertice, index) => (\r\n          <option key={index} value={vertice}>\r\n            {vertice}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      <button className=\"custom-button\" onClick={handleSearchClick}>Buscar</button>\r\n\r\n      <div className=\"rounded-box\">\r\n  {/* Exiba a saída da função dfs() aqui */}\r\n  {dfsOutput && (\r\n    <div className=\"graph\">\r\n      {dfsOutput.split('\\n').map((line, index) => (\r\n        <div key={index}>{line}</div>\r\n      ))}\r\n    </div>\r\n  )}\r\n</div>\r\n\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BodyComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}