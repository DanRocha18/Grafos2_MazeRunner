{"ast":null,"code":"class Grafo {\n  // Cria uma classe Grafo para representar o grafo\n  constructor() {\n    this.listaDeAdjacencia = new Map(); // Cria uma lista de adjacência privada usando um mapa onde as chaves são os nós (strings) e os valores são listas de vértices vizinhos.\n  }\n\n  addNo(no) {\n    // Adiciona um nó ao grafo.\n    if (!this.listaDeAdjacencia.has(no)) {\n      // Verifica se o nó já existe na lista de adjacência.\n      this.listaDeAdjacencia.set(no, []); // Se não existir, cria uma entrada com uma lista vazia de vizinhos.\n    }\n  }\n\n  addAresta(primeiroNo, segundoNo) {\n    // Adiciona uma aresta entre dois nós.\n    // Verifica se ambos os nós existem na lista de adjacência.\n    if (!this.listaDeAdjacencia.has(primeiroNo) || !this.listaDeAdjacencia.has(segundoNo)) {\n      throw new Error(\"nós devem existir no grafo.\");\n    }\n    this.listaDeAdjacencia.get(primeiroNo).push(segundoNo); // Adiciona vertice2 à lista de vizinhos de vertice1.\n  }\n\n  dfsGrafoInteiro() {\n    const todosVertices = Array.from(this.listaDeAdjacencia.keys()); // Obtém todos os vértices do grafo\n    const todosCaminhos = [];\n    for (const vertice of todosVertices) {\n      const caminho = this.dfs(vertice, new Set(), []);\n      todosCaminhos.push(caminho);\n    }\n    return todosCaminhos.join('\\n'); // Retorna todos os caminhos separados por quebras de linha\n  }\n\n  dfs(noDePartida, visitados = new Set(), path = []) {\n    if (!this.listaDeAdjacencia.has(noDePartida)) {\n      return this.dfsGrafoInteiro();\n    }\n    visitados.add(noDePartida);\n\n    // Adiciona o nó atual ao caminho.\n    path.push(noDePartida);\n    if (this.listaDeAdjacencia.get(noDePartida).length === 0) {\n      // Se o nó atual não tiver vizinhos não visitados, retorna o caminho como uma string.\n      const caminho = path.join(\" -> \");\n      path.pop(); // Remove o nó atual do caminho antes de retornar\n      return caminho + '\\n'; // Adiciona uma quebra de linha após o caminho\n    } else {\n      const caminhos = []; // Array para armazenar os caminhos encontrados\n\n      for (const vizinho of this.listaDeAdjacencia.get(noDePartida)) {\n        if (!visitados.has(vizinho)) {\n          const subcaminhos = this.dfs(vizinho, new Set(visitados), path.slice()); // Crie cópias para evitar efeitos colaterais\n          caminhos.push(...subcaminhos);\n        }\n      }\n\n      // Não remove o nó atual do caminho, ainda pode ser parte de outros caminhos.\n\n      return caminhos.join(''); // Usa uma string vazia para separar os caminhos (cada caminho já tem uma quebra de linha)\n    }\n  }\n\n  getVertices() {\n    return Array.from(this.listaDeAdjacencia.keys());\n  }\n}\nconst grafo = new Grafo();\n\n// Adiciona nós ao grafo.\n//Semestre 1\ngrafo.addNo(\"Cálculo 1\");\ngrafo.addNo(\"Algoritmo de Programação de Computadores\");\ngrafo.addNo(\"Desenho Industrial Assistido por Computador\");\ngrafo.addNo(\"Engenharia e Ambiente\");\ngrafo.addNo(\"Introdução à Engenharia\");\n\n//Semestre 2\ngrafo.addNo(\"Cálculo 2\");\ngrafo.addNo(\"Física 1\");\ngrafo.addNo(\"Física 1 Experimental\");\ngrafo.addNo(\"Introdução à Álgebra Linear\");\ngrafo.addNo(\"Probabilidade e Estatística Aplicada à Engenharia\");\ngrafo.addNo(\"Desenvolvimento de Software\");\n\n//Semestre 3\ngrafo.addNo(\"Métodos Numéricos para Engenharia\");\ngrafo.addNo(\"Engenhenharia Econômica\");\ngrafo.addNo(\"Humanidades e Cidadania\");\ngrafo.addNo(\"Teoria da Eletrônica Digital 1\");\ngrafo.addNo(\"Prática de Eletrônica Digital 1\");\ngrafo.addNo(\"Orientação a Objetos\");\ngrafo.addNo(\"Matemática Discreta 1\");\n\n//Semestre 4\ngrafo.addNo(\"Gestão da Produção e Qualidade\");\ngrafo.addNo(\"Métodos de Desenvolvimento de Software\");\ngrafo.addNo(\"Estruturas de Dados 1\");\ngrafo.addNo(\"Fundamentos de Arquiteturas de Computadores\");\ngrafo.addNo(\"Matemática Discreta 2\");\ngrafo.addNo(\"Projeto Integrador de Engenharia 1\");\n\n//Semestre 5\ngrafo.addNo(\"Interação Humano Computador\");\ngrafo.addNo(\"Requisitos de Software\");\ngrafo.addNo(\"Sistemas de Banco de Dados 1\");\ngrafo.addNo(\"Fundamentos de Sistemas Operacionais\");\ngrafo.addNo(\"Compiladores 1\");\ngrafo.addNo(\"Estruturas de Dados 2\");\n\n//Semestre 6\ngrafo.addNo(\"Qualidade de Software 1\");\ngrafo.addNo(\"Testes de Software\");\ngrafo.addNo(\"Arquitetura e Desenho de Software\");\ngrafo.addNo(\"Fundamentos de Redes de Computadores\");\ngrafo.addNo(\"Sistemas de Banco de Dados 2\");\ngrafo.addNo(\"Projeto e Análise de Algoritmos\");\n\n//Semestre 7\ngrafo.addNo(\"Técnicas de Programação em Plataformas Emergentes\");\ngrafo.addNo(\"Paradigmas de Programação\");\ngrafo.addNo(\"Fundamentos de Sistemas Embarcados\");\ngrafo.addNo(\"Programação para Sistemas Paralelos e Distribuídos\");\n\n//Semestre 8\ngrafo.addNo(\"Engenharia de Produto de Software\");\ngrafo.addNo(\"Gerência e Configuração de Evolução de Software\");\ngrafo.addNo(\"Estágio Supervisionado\");\n\n//Semestre 9\ngrafo.addNo(\"Trabalho de Conclusão do Curso 1\");\ngrafo.addNo(\"Projeto Integrador de Engenharia 2\");\n\n//Semestre 10\ngrafo.addNo(\"Trabalho de Conclusão do Curso 2\");\n\n// Adiciona arestas ao grafo.\n//Semestre 1\ngrafo.addAresta(\"Cálculo 1\", \"Cálculo 2\");\ngrafo.addAresta(\"Cálculo 1\", \"Probabilidade e Estatística Aplicada à Engenharia\");\ngrafo.addAresta(\"Cálculo 1\", \"Projeto e Análise de Algoritmos\");\ngrafo.addAresta(\"Algoritmo de Programação de Computadores\", \"Orientação a Objetos\");\ngrafo.addAresta(\"Algoritmo de Programação de Computadores\", \"Desenvolvimento de Software\");\ngrafo.addAresta(\"Algoritmo de Programação de Computadores\", \"Estruturas de Dados 1\");\n\n//Semestre 2\ngrafo.addAresta(\"Cálculo 2\", \"Métodos Numéricos para Engenharia\");\ngrafo.addAresta(\"Introdução à Álgebra Linear\", \"Teoria da Eletrônica Digital 1\");\ngrafo.addAresta(\"Introdução à Álgebra Linear\", \"Prática de Eletrônica Digital 1\");\n\n//Semestre 3\ngrafo.addAresta(\"Engenhenharia Econômica\", \"Gestão da Produção e Qualidade\");\ngrafo.addAresta(\"Teoria da Eletrônica Digital 1\", \"Prática de Eletrônica Digital 1\");\ngrafo.addAresta(\"Prática de Eletrônica Digital 1\", \"Teoria da Eletrônica Digital 1\");\ngrafo.addAresta(\"Teoria da Eletrônica Digital 1\", \"Fundamentos de Arquiteturas de Computadores\");\ngrafo.addAresta(\"Prática de Eletrônica Digital 1\", \"Fundamentos de Arquiteturas de Computadores\");\ngrafo.addAresta(\"Orientação a Objetos\", \"Métodos de Desenvolvimento de Software\");\ngrafo.addAresta(\"Orientação a Objetos\", \"Paradigmas de Programação\");\ngrafo.addAresta(\"Matemática Discreta 1\", \"Matemática Discreta 2\");\n\n//Semestre 4\ngrafo.addAresta(\"Métodos de Desenvolvimento de Software\", \"Interação Humano Computador\");\ngrafo.addAresta(\"Métodos de Desenvolvimento de Software\", \"Requisitos de Software\");\ngrafo.addAresta(\"Métodos de Desenvolvimento de Software\", \"Testes de Software\");\ngrafo.addAresta(\"Estruturas de Dados 1\", \"Compiladores 1\");\ngrafo.addAresta(\"Estruturas de Dados 1\", \"Estruturas de Dados 2\");\ngrafo.addAresta(\"Estruturas de Dados 1\", \"Projeto e Análise de Algoritmos\");\ngrafo.addAresta(\"Fundamentos de Arquiteturas de Computadores\", \"Fundamentos de Sistemas Operacionais\");\ngrafo.addAresta(\"Matemática Discreta 2\", \"Sistemas de Banco de Dados 1\");\ngrafo.addAresta(\"Projeto Integrador de Engenharia 1\", \"Projeto Integrador de Engenharia 2\");\n\n//Semestre 5\ngrafo.addAresta(\"Interação Humano Computador\", \"Qualidade de Software 1\");\ngrafo.addAresta(\"Requisitos de Software\", \"Arquitetura e Desenho de Software\");\ngrafo.addAresta(\"Sistemas de Banco de Dados 1\", \"Sistemas de Banco de Dados 2\");\ngrafo.addAresta(\"Fundamentos de Sistemas Operacionais\", \"Fundamentos de Redes de Computadores\");\ngrafo.addAresta(\"Fundamentos de Sistemas Operacionais\", \"Fundamentos de Sistemas Embarcados\");\ngrafo.addAresta(\"Compiladores 1\", \"Paradigmas de Programação\");\ngrafo.addAresta(\"Estruturas de Dados 2\", \"Programação para Sistemas Paralelos e Distribuídos\");\n\n//Semestre 6\ngrafo.addAresta(\"Testes de Software\", \"Técnicas de Programação em Plataformas Emergentes\");\ngrafo.addAresta(\"Testes de Software\", \"Gerência e Configuração de Evolução de Software\");\ngrafo.addAresta(\"Arquitetura e Desenho de Software\", \"Técnicas de Programação em Plataformas Emergentes\");\ngrafo.addAresta(\"Fundamentos de Redes de Computadores\", \"Programação para Sistemas Paralelos e Distribuídos\");\n\n//Semestre 7\ngrafo.addAresta(\"Técnicas de Programação em Plataformas Emergentes\", \"Engenharia de Produto de Software\");\n\n//Semestre 9\ngrafo.addAresta(\"Trabalho de Conclusão do Curso 1\", \"Trabalho de Conclusão do Curso 2\");\nexport default grafo;","map":{"version":3,"names":["Grafo","constructor","listaDeAdjacencia","Map","addNo","no","has","set","addAresta","primeiroNo","segundoNo","Error","get","push","dfsGrafoInteiro","todosVertices","Array","from","keys","todosCaminhos","vertice","caminho","dfs","Set","join","noDePartida","visitados","path","add","length","pop","caminhos","vizinho","subcaminhos","slice","getVertices","grafo"],"sources":["C:/Users/dani1/Projeto Algoritmo/Grafos1_FluxoDeSoftware/buscaEmProfundidade/src/dfs.js"],"sourcesContent":["class Grafo {\r\n    // Cria uma classe Grafo para representar o grafo\r\n    constructor() {\r\n      this.listaDeAdjacencia = new Map(); // Cria uma lista de adjacência privada usando um mapa onde as chaves são os nós (strings) e os valores são listas de vértices vizinhos.\r\n    }\r\n  \r\n    addNo(no) {\r\n    // Adiciona um nó ao grafo.\r\n      if (!this.listaDeAdjacencia.has(no)) { // Verifica se o nó já existe na lista de adjacência.\r\n        this.listaDeAdjacencia.set(no, []); // Se não existir, cria uma entrada com uma lista vazia de vizinhos.\r\n      }\r\n    }\r\n    \r\n  \r\n    addAresta(primeiroNo, segundoNo) { // Adiciona uma aresta entre dois nós.\r\n     // Verifica se ambos os nós existem na lista de adjacência.\r\n      if (!this.listaDeAdjacencia.has(primeiroNo) || !this.listaDeAdjacencia.has(segundoNo)) {\r\n        throw new Error(\"nós devem existir no grafo.\");\r\n      }\r\n  \r\n      this.listaDeAdjacencia.get(primeiroNo).push(segundoNo); // Adiciona vertice2 à lista de vizinhos de vertice1.\r\n    }\r\n\r\n    dfsGrafoInteiro() {\r\n      const todosVertices = Array.from(this.listaDeAdjacencia.keys()); // Obtém todos os vértices do grafo\r\n      const todosCaminhos = [];\r\n    \r\n      for (const vertice of todosVertices) {\r\n        const caminho = this.dfs(vertice, new Set(), []);\r\n        todosCaminhos.push(caminho);\r\n      }\r\n    \r\n      return todosCaminhos.join('\\n'); // Retorna todos os caminhos separados por quebras de linha\r\n    }\r\n    \r\n  \r\n    dfs(noDePartida, visitados = new Set(), path = []) {\r\n      if (!this.listaDeAdjacencia.has(noDePartida)) {\r\n        return this.dfsGrafoInteiro();\r\n      }\r\n    \r\n      visitados.add(noDePartida);\r\n    \r\n      // Adiciona o nó atual ao caminho.\r\n      path.push(noDePartida);\r\n    \r\n      if (this.listaDeAdjacencia.get(noDePartida).length === 0) {\r\n        // Se o nó atual não tiver vizinhos não visitados, retorna o caminho como uma string.\r\n        const caminho = path.join(\" -> \");\r\n        path.pop(); // Remove o nó atual do caminho antes de retornar\r\n        return caminho + '\\n'; // Adiciona uma quebra de linha após o caminho\r\n      } else {\r\n        const caminhos = []; // Array para armazenar os caminhos encontrados\r\n    \r\n        for (const vizinho of this.listaDeAdjacencia.get(noDePartida)) {\r\n          if (!visitados.has(vizinho)) {\r\n            const subcaminhos = this.dfs(vizinho, new Set(visitados), path.slice()); // Crie cópias para evitar efeitos colaterais\r\n            caminhos.push(...subcaminhos);\r\n          }\r\n        }\r\n    \r\n        // Não remove o nó atual do caminho, ainda pode ser parte de outros caminhos.\r\n    \r\n        return caminhos.join(''); // Usa uma string vazia para separar os caminhos (cada caminho já tem uma quebra de linha)\r\n      }\r\n    }\r\n    \r\n        \r\n    getVertices() {\r\n        return Array.from(this.listaDeAdjacencia.keys());\r\n    }\r\n\r\n  }\r\n\r\n  const grafo = new Grafo();\r\n\r\n   // Adiciona nós ao grafo.\r\n  //Semestre 1\r\n  grafo.addNo(\"Cálculo 1\");\r\n  grafo.addNo(\"Algoritmo de Programação de Computadores\");\r\n  grafo.addNo(\"Desenho Industrial Assistido por Computador\");\r\n  grafo.addNo(\"Engenharia e Ambiente\");\r\n  grafo.addNo(\"Introdução à Engenharia\");\r\n  \r\n  //Semestre 2\r\n  grafo.addNo(\"Cálculo 2\");\r\n  grafo.addNo(\"Física 1\");\r\n  grafo.addNo(\"Física 1 Experimental\");\r\n  grafo.addNo(\"Introdução à Álgebra Linear\");\r\n  grafo.addNo(\"Probabilidade e Estatística Aplicada à Engenharia\");\r\n  grafo.addNo(\"Desenvolvimento de Software\");\r\n  \r\n  //Semestre 3\r\n  grafo.addNo(\"Métodos Numéricos para Engenharia\");\r\n  grafo.addNo(\"Engenhenharia Econômica\");\r\n  grafo.addNo(\"Humanidades e Cidadania\");\r\n  grafo.addNo(\"Teoria da Eletrônica Digital 1\");\r\n  grafo.addNo(\"Prática de Eletrônica Digital 1\");\r\n  grafo.addNo(\"Orientação a Objetos\");\r\n  grafo.addNo(\"Matemática Discreta 1\");\r\n  \r\n  //Semestre 4\r\n  grafo.addNo(\"Gestão da Produção e Qualidade\");\r\n  grafo.addNo(\"Métodos de Desenvolvimento de Software\");\r\n  grafo.addNo(\"Estruturas de Dados 1\");\r\n  grafo.addNo(\"Fundamentos de Arquiteturas de Computadores\");\r\n  grafo.addNo(\"Matemática Discreta 2\");\r\n  grafo.addNo(\"Projeto Integrador de Engenharia 1\");\r\n  \r\n  //Semestre 5\r\n  grafo.addNo(\"Interação Humano Computador\");\r\n  grafo.addNo(\"Requisitos de Software\");\r\n  grafo.addNo(\"Sistemas de Banco de Dados 1\");\r\n  grafo.addNo(\"Fundamentos de Sistemas Operacionais\");\r\n  grafo.addNo(\"Compiladores 1\");\r\n  grafo.addNo(\"Estruturas de Dados 2\");\r\n  \r\n  //Semestre 6\r\n  grafo.addNo(\"Qualidade de Software 1\");\r\n  grafo.addNo(\"Testes de Software\");\r\n  grafo.addNo(\"Arquitetura e Desenho de Software\");\r\n  grafo.addNo(\"Fundamentos de Redes de Computadores\");\r\n  grafo.addNo(\"Sistemas de Banco de Dados 2\");\r\n  grafo.addNo(\"Projeto e Análise de Algoritmos\");\r\n  \r\n  //Semestre 7\r\n  grafo.addNo(\"Técnicas de Programação em Plataformas Emergentes\");\r\n  grafo.addNo(\"Paradigmas de Programação\");\r\n  grafo.addNo(\"Fundamentos de Sistemas Embarcados\");\r\n  grafo.addNo(\"Programação para Sistemas Paralelos e Distribuídos\");\r\n  \r\n  //Semestre 8\r\n  grafo.addNo(\"Engenharia de Produto de Software\");\r\n  grafo.addNo(\"Gerência e Configuração de Evolução de Software\");\r\n  grafo.addNo(\"Estágio Supervisionado\");\r\n  \r\n  //Semestre 9\r\n  grafo.addNo(\"Trabalho de Conclusão do Curso 1\");\r\n  grafo.addNo(\"Projeto Integrador de Engenharia 2\");\r\n\r\n  //Semestre 10\r\n  grafo.addNo(\"Trabalho de Conclusão do Curso 2\");\r\n  \r\n  \r\n  // Adiciona arestas ao grafo.\r\n  //Semestre 1\r\n  grafo.addAresta(\"Cálculo 1\", \"Cálculo 2\");\r\n  grafo.addAresta(\"Cálculo 1\", \"Probabilidade e Estatística Aplicada à Engenharia\");\r\n  grafo.addAresta(\"Cálculo 1\", \"Projeto e Análise de Algoritmos\");\r\n  grafo.addAresta(\"Algoritmo de Programação de Computadores\", \"Orientação a Objetos\");\r\n  grafo.addAresta(\"Algoritmo de Programação de Computadores\", \"Desenvolvimento de Software\");\r\n  grafo.addAresta(\"Algoritmo de Programação de Computadores\", \"Estruturas de Dados 1\");\r\n  \r\n  //Semestre 2\r\n  grafo.addAresta(\"Cálculo 2\", \"Métodos Numéricos para Engenharia\");\r\n  grafo.addAresta(\"Introdução à Álgebra Linear\", \"Teoria da Eletrônica Digital 1\");\r\n  grafo.addAresta(\"Introdução à Álgebra Linear\", \"Prática de Eletrônica Digital 1\");\r\n  \r\n  //Semestre 3\r\n  grafo.addAresta(\"Engenhenharia Econômica\", \"Gestão da Produção e Qualidade\");\r\n  grafo.addAresta(\"Teoria da Eletrônica Digital 1\", \"Prática de Eletrônica Digital 1\"); \r\n  grafo.addAresta(\"Prática de Eletrônica Digital 1\", \"Teoria da Eletrônica Digital 1\"); \r\n  grafo.addAresta(\"Teoria da Eletrônica Digital 1\", \"Fundamentos de Arquiteturas de Computadores\");\r\n  grafo.addAresta(\"Prática de Eletrônica Digital 1\", \"Fundamentos de Arquiteturas de Computadores\");\r\n  grafo.addAresta(\"Orientação a Objetos\", \"Métodos de Desenvolvimento de Software\"); \r\n  grafo.addAresta(\"Orientação a Objetos\", \"Paradigmas de Programação\"); \r\n  grafo.addAresta(\"Matemática Discreta 1\", \"Matemática Discreta 2\"); \r\n  \r\n  //Semestre 4\r\n  grafo.addAresta(\"Métodos de Desenvolvimento de Software\", \"Interação Humano Computador\");\r\n  grafo.addAresta(\"Métodos de Desenvolvimento de Software\", \"Requisitos de Software\");\r\n  grafo.addAresta(\"Métodos de Desenvolvimento de Software\", \"Testes de Software\");\r\n  grafo.addAresta(\"Estruturas de Dados 1\", \"Compiladores 1\");\r\n  grafo.addAresta(\"Estruturas de Dados 1\", \"Estruturas de Dados 2\");\r\n  grafo.addAresta(\"Estruturas de Dados 1\", \"Projeto e Análise de Algoritmos\");\r\n  grafo.addAresta(\"Fundamentos de Arquiteturas de Computadores\", \"Fundamentos de Sistemas Operacionais\");\r\n  grafo.addAresta(\"Matemática Discreta 2\", \"Sistemas de Banco de Dados 1\");\r\n  grafo.addAresta(\"Projeto Integrador de Engenharia 1\", \"Projeto Integrador de Engenharia 2\");\r\n  \r\n  //Semestre 5\r\n  grafo.addAresta(\"Interação Humano Computador\", \"Qualidade de Software 1\");\r\n  grafo.addAresta(\"Requisitos de Software\", \"Arquitetura e Desenho de Software\");\r\n  grafo.addAresta(\"Sistemas de Banco de Dados 1\", \"Sistemas de Banco de Dados 2\");\r\n  grafo.addAresta(\"Fundamentos de Sistemas Operacionais\", \"Fundamentos de Redes de Computadores\");\r\n  grafo.addAresta(\"Fundamentos de Sistemas Operacionais\", \"Fundamentos de Sistemas Embarcados\");\r\n  grafo.addAresta(\"Compiladores 1\", \"Paradigmas de Programação\");\r\n  grafo.addAresta(\"Estruturas de Dados 2\", \"Programação para Sistemas Paralelos e Distribuídos\");\r\n  \r\n  //Semestre 6\r\n  grafo.addAresta(\"Testes de Software\", \"Técnicas de Programação em Plataformas Emergentes\");\r\n  grafo.addAresta(\"Testes de Software\", \"Gerência e Configuração de Evolução de Software\");\r\n  grafo.addAresta(\"Arquitetura e Desenho de Software\", \"Técnicas de Programação em Plataformas Emergentes\");\r\n  grafo.addAresta(\"Fundamentos de Redes de Computadores\", \"Programação para Sistemas Paralelos e Distribuídos\");\r\n\r\n  //Semestre 7\r\n  grafo.addAresta(\"Técnicas de Programação em Plataformas Emergentes\", \"Engenharia de Produto de Software\");\r\n\r\n  //Semestre 9\r\n  grafo.addAresta(\"Trabalho de Conclusão do Curso 1\", \"Trabalho de Conclusão do Curso 2\");\r\n\r\n  export default grafo;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}